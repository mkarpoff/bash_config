"""
" Environment settings
"""
"
" set nocompatible

" Huawei servers backspace doesn't work...
set backspace=2

" Set the shell to run bash
set shell=/bin/bash

" To hell with visual and audio bell
set noerrorbells visualbell t_vb=

" Assume I want syntax highlighting
syntax enable

" Persistent undo history
set undofile
set undodir=$HOME/.vim/undo
set undolevels=1000
set undoreload=10000

" Move viminfo to .vim folder
set viminfo+=n$HOME/.vim/info

" General indenting rules
set autoindent
set tabstop=2
set softtabstop=2
set shiftwidth=2

" Status line
set laststatus=2

" vim-airline settings
set encoding=utf-8
scriptencoding=utf-8
set termencoding=utf-8
let g:airline_powerline_fonts=1
if !exists('g:airline_symbols')
	let g:airline_symbols = {}
endif
let g:airline#extensions#whitespace#mixed_indent_algo=1
let g:airline_theme='simple'
let g:airline_symbols.branch = ''
let g:airline_symbols.readonly = '<RO>'
let g:airline_symbols.maxlinenr = ''
let g:airline_symbols.linenr = ''
let g:airline_symbols.crypt = 'C'


" Hotkeys for speeding usage
set timeoutlen=1000 ttimeoutlen=10
imap jk <Esc>
nmap ww <c-w>
nmap ; :
nmap [[ :call b:Compile()<CR>
nmap ]] :call b:CompileClean()<CR>


" vim-man package settings
cnoreabbrev make make<c-\>esubstitute(getcmdline(), '^make\>', 'make!', '')<enter>


" Search Settings
function! HighlightSearch()
	if &hlsearch
		set nohlsearch
		echo 'Search highlight off'
	else
		set hlsearch
		echo 'Search highlight on'
	endif
endfunction
command! -nargs=0 HS call HighlightSearch()
cnoreabbrev hs hs<c-\>esubstitute(getcmdline(), '^hs\>', 'HS', '')<enter>

" Spell Checking
command SCon setlocal spell spelllang=en_ca
command SCoff setlocal nospell

function! ColorColumn(col)
	let &colorcolumn=join(range(a:col,999),',')
endfunction
command! -nargs=1 ColorColumn call ColorColumn(<f-args>)

" Show white spacing
set listchars=eol:¬,tab:>•,trail:~,extends:>,precedes:<,space:·
command WSToggle set invlist

" vim-qf settings
let g:qf_auto_resize = 0

filetype plugin on

" ZoomWin toggle fullscreen hotkey
nnoremap <silent> <C-w>w :ZoomWin<CR>

" vim-man package settings
cnoreabbrev man man<c-\>esubstitute(getcmdline(), '^man\>', 'Man', '')<enter>


"""
" Environment Specific settings
" ALE specific package .vim/pack/git/opt/ale
function! g:AleSettings()
	packadd ale
	highlight ALEErrorSign ctermfg=160 ctermbg=232 guifg=#ff0000 guibg=#080808
	highlight ALEWarningSign ctermfg=202 ctermbg=234 guifg=#ff5f00 guibg=#1c1c1c
	highlight ALEInfoSign ctermfg=45 ctermbg=234
	highlight ALESignColumnWithErrors ctermfg=243 ctermbg=5 guifg=#767676 guibg=#080808
	highlight ALESignColumnWithoutErrors term=bold cterm=bold ctermfg=239 ctermbg=234 gui=bold guifg=#4e4e4e guibg=#1c1c1c
	let g:airline#extensions#ale#enabled = 1
	let g:ale_set_loclist=0
	let g:ale_sign_column_always=1
	let g:ale_sign_error='E>'
	let g:ale_sign_warning='W>'
	let g:ale_change_sign_column_color=1
	let g:ale_echo_msg_format='[%linter%] [%severity%] %s'
endfunction

augroup vimrc
	" Uncomment the following to have Vim jump to the last position when
	" reopening a file
	if has('autocmd')
		au BufReadPost * if line("'\"") > 0 && line("'\"") <= line("$")
			\| exe "normal! g'\"" | endif
	endif
	autocmd BufNewFile,BufRead *.x86 set filetype=gas
	autocmd BufNewFile,BufRead *.log set filetype=log

augroup END

colorscheme mkarpoff
